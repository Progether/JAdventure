<?xml version="1.0"?>

<project name="JAdventure" basedir="." default="main">

  <property name="src.dir" value="src/main/java" />
  <property name="src.test.dir" value="src/test/java" />

  <property name="main-class" value="com.jadventure.game.JAdventure" />
  
  <property name="build.dir" value="build" />
  <property name="classes.dir" value="${build.dir}/classes" />
  <property name="jar.dir" value="${build.dir}/jar" />
  <property name="lib.dir" value="lib"/>

  <path id="libraries.path">
    <fileset dir="${lib.dir}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <path id="classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
  </path>
  <path id="application" location="${jar.dir}/${ant.project.name}.jar"/>

  <target name="compile">
    <mkdir dir="${classes.dir}"/>
    <javac debug="true" includeantruntime="false" srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath"/>
    <javac debug="true" includeantruntime="false" srcdir="${src.test.dir}" destdir="${classes.dir}" classpathref="classpath"/>
  </target>

  <target name="rebuild" depends="clean">
    <antcall target="compile" />
  </target>

  <target name="jar" depends="compile">
    <mkdir dir="${jar.dir}"/>
    <mkdir dir="${classes.dir}/${lib.dir}"/>

    <copy todir="${classes.dir}/${lib.dir}" flatten="true">
      <path refid="libraries.path"/>
    </copy>

    <manifestclasspath property="manifest.classpath" jarfile="${jar.file}">
      <classpath refid="libraries.path"/>
    </manifestclasspath>

    <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
      <manifest>
        <attribute name="Main-Class" value="${main-class}"/>
        <attribute name="Class-Path" value="${manifest.classpath}"/>
      </manifest>
    </jar>
  </target>

  <target name="dist" depends="jar">
    <copy todir="${jar.dir}/lib">
        <fileset dir="lib" />
     </copy>
     <copy todir="${jar.dir}/json">
	 <fileset dir="json" />
     </copy>
  </target>


  <target name="copy-resources">
    <copy todir="${classes.dir}">
      <fileset dir="${basedir}/src/main/resources" />
  	</copy>
    <copy todir="${classes.dir}">
      <fileset dir="${basedir}/src/test/resources" />
  	</copy>
  </target>

  <target name="junit" depends="copy-resources, jar">
    <junit printsummary="yes" haltonfailure="yes" showoutput="yes">
      <classpath>
        <path refid="classpath"/>
        <path refid="application"/>
      </classpath>
      <formatter usefile="false" type="plain" />
      <batchtest fork="yes">
        <fileset dir="${src.test.dir}" includes="**/*Test.java"/>
      </batchtest>
    </junit>
  </target>

  <target name="run-app">
    <condition property="arg0" value="stand_alone">
      <not>
        <isset property="arg0"/>
      </not>
    </condition>
    <java fork="true" classname="${main-class}">
      <arg value="${arg0}">
      </arg>
      <classpath>
        <path refid="classpath"/>
        <path refid="application"/>
      </classpath>
    </java>
  </target>

  <target name="run" depends="junit, run-app" />

  <target name="run-no-tests" depends="copy-resources, jar, run-app" />

  <target name="clean">
    <delete dir="build" />
  </target>
  
  <target name="main" depends="run" />

</project>
